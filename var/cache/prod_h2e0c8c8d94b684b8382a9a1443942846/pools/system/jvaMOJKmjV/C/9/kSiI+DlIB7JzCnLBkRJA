<?php //Shopware%255CCore%255CCheckout%255CPayment%255CSalesChannel%255CHandlePaymentMethodRoute%2523load

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Shopware\\Core\\Framework\\Routing\\Annotation\\Since'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Shopware\\Core\\Framework\\Routing\\Annotation\\Since')),
        clone ($p['OpenApi\\Annotations\\Post'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Post')),
        clone ($p['OpenApi\\Annotations\\RequestBody'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\RequestBody')),
        clone ($p['OpenApi\\Context'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Context')),
        clone ($p['OpenApi\\Logger\\DefaultLogger'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Logger\\DefaultLogger')),
        clone ($p['OpenApi\\Annotations\\JsonContent'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\JsonContent')),
        clone ($p['OpenApi\\Annotations\\Property'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Property')),
        clone $p['OpenApi\\Context'],
        clone $p['OpenApi\\Logger\\DefaultLogger'],
        clone $p['OpenApi\\Annotations\\Property'],
        clone $p['OpenApi\\Context'],
        clone $p['OpenApi\\Logger\\DefaultLogger'],
        clone $p['OpenApi\\Annotations\\Property'],
        clone $p['OpenApi\\Context'],
        clone $p['OpenApi\\Logger\\DefaultLogger'],
        clone $p['OpenApi\\Context'],
        clone $p['OpenApi\\Logger\\DefaultLogger'],
        clone ($p['OpenApi\\Annotations\\Response'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('OpenApi\\Annotations\\Response')),
        clone $p['OpenApi\\Context'],
        clone $p['OpenApi\\Logger\\DefaultLogger'],
        clone $p['OpenApi\\Context'],
        clone $p['OpenApi\\Logger\\DefaultLogger'],
        clone ($p['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
    ],
    null,
    [
        'Shopware\\Core\\Framework\\Routing\\Annotation\\Since' => [
            'value' => [
                '6.2.0.0',
            ],
        ],
        'stdClass' => [
            'path' => [
                1 => '/handle-payment',
            ],
            'tags' => [
                1 => [
                    'Store API',
                    'Payment & Shipping',
                ],
            ],
            'summary' => [
                1 => 'Initiate a payment for an order',
            ],
            'description' => [
                1 => 'This generic endpoint is should be called to initiate a payment flow after an order has been created. The details of the payment flow can differ depending on the payment integration and might require calling additional operations or the setup of webhooks.'."\n"
                    ."\n"
                    .'The endpoint internally calls the payment handler of the payment method currently set for the order.',
                6 => 'Identifier of an order',
                9 => 'URL to which the client should be redirected after successful payment',
                12 => 'URL to which the client should be redirected after erroneous payment',
                17 => 'Redirect to external payment provider',
            ],
            'operationId' => [
                1 => 'handlePaymentMethod',
            ],
            'requestBody' => [
                1 => $o[2],
            ],
            'responses' => [
                1 => [
                    $o[17],
                ],
            ],
            '_context' => [
                1 => $o[20],
                $o[3],
                5 => $o[15],
                $o[7],
                9 => $o[10],
                12 => $o[13],
                17 => $o[18],
            ],
            'required' => [
                2 => true,
                5 => [
                    'orderId',
                ],
            ],
            '_unmerged' => [
                2 => [
                    $o[5],
                ],
            ],
            'logger' => [
                3 => $o[4],
                7 => $o[8],
                10 => $o[11],
                13 => $o[14],
                15 => $o[16],
                18 => $o[19],
                20 => $o[21],
            ],
            'filename' => [
                3 => '/var/www/shopwareloc/vendor/shopware/core/Framework/Compatibility/DocParser.php',
                7 => '/var/www/shopwareloc/vendor/shopware/core/Framework/Compatibility/DocParser.php',
                10 => '/var/www/shopwareloc/vendor/shopware/core/Framework/Compatibility/DocParser.php',
                13 => '/var/www/shopwareloc/vendor/shopware/core/Framework/Compatibility/DocParser.php',
                15 => '/var/www/shopwareloc/vendor/shopware/core/Framework/Compatibility/DocParser.php',
                18 => '/var/www/shopwareloc/vendor/shopware/core/Framework/Compatibility/DocParser.php',
                20 => '/var/www/shopwareloc/vendor/shopware/core/Framework/Compatibility/DocParser.php',
            ],
            'line' => [
                3 => 1009,
                7 => 1009,
                10 => 1009,
                13 => 1009,
                15 => 1009,
                18 => 1009,
                20 => 1009,
            ],
            'method' => [
                3 => 'Annotation',
                7 => 'Annotation',
                10 => 'Annotation',
                13 => 'Annotation',
                15 => 'Annotation',
                18 => 'Annotation',
                20 => 'Annotation',
            ],
            'class' => [
                3 => 'DocParser',
                7 => 'DocParser',
                10 => 'DocParser',
                13 => 'DocParser',
                15 => 'DocParser',
                18 => 'DocParser',
                20 => 'DocParser',
            ],
            'namespace' => [
                3 => 'Shopware\\Core\\Framework\\Compatibility',
                7 => 'Shopware\\Core\\Framework\\Compatibility',
                10 => 'Shopware\\Core\\Framework\\Compatibility',
                13 => 'Shopware\\Core\\Framework\\Compatibility',
                15 => 'Shopware\\Core\\Framework\\Compatibility',
                18 => 'Shopware\\Core\\Framework\\Compatibility',
                20 => 'Shopware\\Core\\Framework\\Compatibility',
            ],
            'annotations' => [
                3 => [
                    $o[2],
                ],
                7 => [
                    $o[6],
                ],
                10 => [
                    $o[9],
                ],
                13 => [
                    $o[12],
                ],
                15 => [
                    $o[5],
                ],
                18 => [
                    $o[17],
                ],
                20 => [
                    $o[1],
                ],
            ],
            'properties' => [
                5 => [
                    $o[6],
                    $o[9],
                    $o[12],
                ],
            ],
            'property' => [
                6 => 'orderId',
                9 => 'finishUrl',
                12 => 'errorUrl',
            ],
            'type' => [
                6 => 'string',
                9 => 'string',
                12 => 'string',
            ],
            'response' => [
                17 => '200',
            ],
        ],
        'Symfony\\Component\\Routing\\Annotation\\Route' => [
            'path' => [
                22 => '/store-api/handle-payment',
            ],
            'name' => [
                22 => 'store-api.payment.handle',
            ],
            'methods' => [
                22 => [
                    'GET',
                    'POST',
                ],
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[22],
    ],
    []
); }];
